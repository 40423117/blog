{"pages":[{"title":"admin-Snap.svg繪圖範例","text":"以下為使用 snap.svg 執行網頁繪圖的範例 window.onload=function(){ brython(1); } from javascript import JSConstructor from browser import alert from browser import window, document # 透過 window 與 JSConstructor 從 Brython 物件 snap 擷取 Snap 物件的內容 snap = JSConstructor(window.Snap) # 使用 id 為 \"svgout\" 的 svg 標註進行繪圖 s = snap(\"#svgout\") offsetY = 50 # 是否標示出繪圖範圍 #borderRect = s.rect(0,0,800,640,10,10).attr({ 'stroke': \"silver\", 'fill': \"silver\", 'strokeWidth': \"3\" }) g = s.group().transform('t250,120') r0 = s.rect(150,150,100,100,20,20).attr({ 'fill': \"orange\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c0 = s.circle(225,225,10).attr({ 'fill': \"silver\", 'stroke': \"black\", 'strokeWidth': \"4\" }).attr({ 'id': 'c0' }) g0 = s.group( r0,c0 ).attr({ 'id': 'g0' }) #g0.animate({ 'transform' : 't250,120r360,225,225' },4000) g0.appendTo( g ) g0.animate({ 'transform' : 'r360,225,225' },4000) # 讓 g0 可以拖動 g0.drag() r1 = s.rect(100,100,100,100,20,20).attr({ 'fill': \"red\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c1 = s.circle(175,175,10).attr({ 'fill': \"silver\", 'stroke': \"black\" , 'strokeWidth': \"4\"}).attr({ 'id': 'c1' }) g1 = s.group( r1,c1 ).attr({ 'id': 'g1' }) g1.appendTo( g0 ).attr({ 'id': 'g1' }) g1.animate({ 'transform' : 'r360,175,175' },4000) r2 = s.rect(50,50,100,100,20,20).attr({ 'fill': \"blue\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c2 = s.circle(125,125,10).attr({ 'fill': \"silver\", 'stroke': \"black\", 'strokeWidth': \"4\" }).attr({ 'id': 'c2' }) g2 = s.group(r2,c2).attr({ 'id': 'g2' }) g2.appendTo( g1 ); g2.animate( { 'transform' : 'r360,125,125' },4000); r3 = s.rect(0,0,100,100,20,20).attr({ 'fill': \"yellow\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c3 = s.circle(75,75,10).attr({ 'fill': \"silver\", 'stroke': \"black\", 'strokeWidth': \"4\" }).attr({ 'id': 'c3' }) g3 = s.group(r3,c3).attr({ 'id': 'g3' }) g3.appendTo( g2 ) g3.animate( { 'transform' : 'r360,75,75' },4000) r4 = s.rect(-50,-50,100,100,20,20).attr({ 'fill': \"green\", 'opacity': \"0.8\", 'stroke': \"black\", 'strokeWidth': \"2\" }) c4 = s.circle(25,25,10).attr({ 'fill': \"silver\", 'stroke': \"black\", 'strokeWidth': \"4\" }).attr({ 'id': 'c4' }) g4 = s.group(r4,c4).attr({ 'id': 'g4' }); g4.appendTo( g3 ) g4.animate( { 'transform' : 'r360,25,25' },4000) 範例二 from javascript import JSConstructor from browser import alert from browser import window, document # 透過 window 與 JSConstructor 從 Brython 物件 snap 擷取 Snap 物件的內容 snap = JSConstructor(window.Snap) s = snap(\"#svgout1\") # 建立物件時, 同時設定 id 名稱 r = s.rect(10,10,100,100).attr({'id': 'rect'}) c = s.circle(100,100,50).attr({'id': 'circle'}) r.attr('fill', 'red') c.attr({ 'fill': 'blue', 'stroke': 'black', 'strokeWidth': 10 }) r.attr({ 'stroke': '#123456', 'strokeWidth': 20 }) s.text(180,100, '點按一下圖形').attr({'fill' : 'blue', 'stroke': 'blue', 'stroke-width': 0.2 }) g = s.group().attr({'id': 'tux'}) def hoverover(ev): g.animate({'transform': 's1.5r45,t180,20'}, 1000, window.mina.bounce) def hoverout(ev): g.animate({'transform': 's1r0,t180,20'}, 1000, window.mina.bounce) # callback 函式 def onSVGLoaded(data): #s.append(data) g.append(data) #g.hover(hoverover, hoverout ) g.text(300,100, '將滑鼠指向企鵝') # 利用 window.Snap.load 載入 svg 檔案 tux = window.Snap.load(\"http://40423117.github.io/blog_data/files/snap.svg\", onSVGLoaded) g.transform('t180,20') # 與視窗事件對應的函式 def rtoyellow(ev): r.attr('fill', 'yellow') def ctogreen(ev): c.attr('fill', 'green') # 根據物件 id 綁定滑鼠事件執行對應函式 document['rect'].bind('click', rtoyellow) document['circle'].bind('click', ctogreen) document['tux'].bind('mouseover', hoverover) document['tux'].bind('mouseleave', hoverout)","tags":"規劃","url":"./admin-snapsvghui-tu-fan-li.html"},{"title":"admin-畫出系上網路配置圖","text":"使用Python3+nwdiag畫出網路配置圖 系上網路配置 畫出網路配置圖 使用 Python3 與 http://blockdiag.com/en/ 中的 nwdiag 工具繪製機械設計工程系的網路配置圖. 1 2 #安裝 blockdiag 模組 pip install blockdiag 1 2 #安裝 nwdiag 模組 pip install nwdiag 到SciTE下貼上以下程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 nwdiag { default_fontsize = 15 ; 校主幹 [ shape = cloud ]; 校主幹 -- 系路由器 ; network 系主幹 { address = \"140.130.17.0/24\" ; 系路由器 [ address = \"140.130.17.254\" ]; 雲端點名網路 ; 八樓集線器 [ address = \"140.130.17.82\" ]; 七樓集線器 ; 六樓集線器 ; 系伺服器群 ; } network 八樓主幹 { address = \"17.10-82\" 八樓集線器 [ address = \"140.130.17.82\" ]; 老師 1 伺服器群 [ address = \"140.130.17.10-15\" ]; 老師 2 伺服器群 [ address = \"140.130.17.16-25\" ]; 老師 3 伺服器群 [ address = \"140.130.17.26-60\" ]; } network CAD_CAE { address = \"17.83\" ; 八樓集線器 [ address = \"140.130.17.82\" ]; CAD_NAT [ address = \"140.130.17.82\" ]; CAE_NAT [ address = \"140.130.17.83\" ]; } network 電腦輔助設計室 { address = \"192.168.1.0/24\" ; CAD_NAT [ address = \"192.168.1.1\" ]; CAD1 [ address = \".2\" ]; CAD2 ; CAD64 [ address = \".100\" ]; } network 電腦輔助繪圖室 { address = \"192.168.1.0/24\" ; CAE_NAT [ address = \"192.168.1.1\" ]; CAE1 [ address = \".2\" ]; CAE2 ; CAE64 [ address = \".100\" ]; } network 七樓主幹 { address = \"140.130.17.83-90\" 七樓集線器 ; 老師 4 伺服器群 [ address = \"140.130.17.61-63\" ]; 老師 5 伺服器群 [ address = \"140.130.17.64-70\" ]; 老師 6 伺服器群 [ address = \"140.130.17.71-75\" ]; } network 六樓主幹 { address = \"140.130.17.91-100\" 六樓集線器 ; 老師 7 伺服器群 [ address = \"140.130.17.76-78\" ]; 老師 8 伺服器群 [ address = \"140.130.17.79-80\" ]; 老師 9 伺服器群 [ address = \"140.130.17.81-95\" ]; } } 根據 1 2 3 4 Execute nwdiag command : $ nwdiag simple . diag $ ls simple . png simple . png 將上述程式碼儲存為 .diag檔後， 假設路徑在 y:\\tmp 底下則輸入 1 nwdiag y : \\ tmp \\ simple . diag 在該路徑底下就會有 simple 圖檔(.png)可以使用","tags":"規劃","url":"./admin-hua-chu-xi-shang-wang-lu-pei-zhi-tu.html"},{"title":"admin-Pelican與WordPress同步設定","text":"Pelican與WordPress同步設定 1 2 3 4 #輸入你帳號密碼儲存的地方 filepath = \"y:/tmp/password.txt\" #輸入你wordpress的網址 wordpress = \"wp-mde40423117.rhcloud.com\" 再申請一隻WordPress帳號，角色設定為：編輯(Editor) 1 2 3 #password.txt 輸入格式為以下 帳號 密碼 同步WordPress時候，要點的是文章.MarkDown 而不是點@Button new-to-wp pelican&wordpress from 40423117 on Vimeo .","tags":"規劃","url":"./admin-pelicanyu-wordpresstong-bu-she-ding.html"},{"title":"admin-跳線測試與共用網路","text":"使用一條跳線，對接兩台電腦使其連線共用其中一台的網路 兩台電腦對接且共用網路的方法 1.先停用自己的網卡(已經連上網路的) 2.按下要共用網路的網卡右鍵→內容→IPv4設定以下 3.打開OpenDHCPServer資料夾下的 RunStandAlone.bat 4.到欲共用網路的電腦下，設定該台電腦的網卡，以第2步驟修改成以下 5.接著，到自己的電腦下，查看剛剛開啟的cmd檔，會顯示以下 6.啟動自己的網卡(已經連上網路的) 7.打開CCProxy.exe 8.選取\"選項\" 9.全部打勾，記下port號 10.到欲共用網路的電腦下，打開瀏覽器設定Proxy，IP位址為自己的IP(桌機)，Port號為剛剛記錄下來的 設定完成後，即可共用網路。 桌機與Raspberry pi 3 model b對接且共用網路的方法 與上方的操作方式雷同。 第四步驟改成 打開Xming資料夾中的XLanch.exe→One Window →Open session via XDMCP→打IP位址(不要跟桌機一樣)→完成 其他步驟大致上都差不多。 以下影片斟酌觀看，可以單看文字表達就可以。 (與40423103跳線對接的測試影片) 跳線測試與共用網路 from 40423117 on Vimeo .","tags":"規劃","url":"./admin-tiao-xian-ce-shi-yu-gong-yong-wang-lu.html"},{"title":"admin-網際內容管理","text":"個人網際內容管理 CMSimply 內容管理系統 Pelican 靜態網址 WordPress 動態網誌","tags":"規劃","url":"./admin-wang-ji-nei-rong-guan-li.html"},{"title":"admin-網路線製作流程紀錄","text":"一條 568b 網路線及一條跳線 網路線接法 EIA/TIA 568B 的標準雙絞線 (兩端採相同色線排列) 腳位：接頭朝前, 耳朵朝下 接法：先排出橘、藍、綠、棕，白線排在前，排好後，藍白與綠白對調 顏色：橘白-橘-綠白-藍-藍白-綠-棕白-棕 跳線接法 Cross Over (EIA/TIA 568B) 線 (一端採標準 EIA/TIA 568B 色線排列, 另一端則將綠線與橘線對調) 腳位：接頭朝前, 耳朵朝下 顏色：綠白-綠-橘白-藍-藍白-橘-棕白-棕 (即將上面正常線的橘線與綠線對調) 網路線示範圖示 先排出橘、藍、綠、棕 把線捲開，白線排在前 排好後，藍白與綠白對調 把線拉直 接頭耳朵要朝下！很重要！！好像都會錯在這個地方！ 現在只接了一端，還好可以從另一端在塞入保護殼！記得要放保護殼 完成囉！●▽●","tags":"規劃","url":"./admin-wang-lu-xian-zhi-zuo-liu-cheng-ji-lu.html"}]}